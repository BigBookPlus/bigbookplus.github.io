import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c,a as s,b as n,d as e,f as l}from"./app-819b17d9.js";const i={},r=s("h2",{id:"poco",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#poco","aria-hidden":"true"},"#"),n(" POCO")],-1),u=s("br",null,null,-1),d={href:"https://pocoproject.org/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/pocoproject/poco",target:"_blank",rel:"noopener noreferrer"},h=s("br",null,null,-1),m=s("br",null,null,-1),b=l(`<h2 id="how-to-upload" tabindex="-1"><a class="header-anchor" href="#how-to-upload" aria-hidden="true">#</a> How to Upload</h2><h3 id="includes-stuffs" tabindex="-1"><a class="header-anchor" href="#includes-stuffs" aria-hidden="true">#</a> Includes Stuffs</h3><p>Most of the FTP related APIs are in the <code>Poco/Net/FTPClientSession.h</code> header file. The Exception Processing tools are used all the time, so that we include it too. When you need to do the uploading to FTP server, <code>Poco/StreamCopier.h</code> is must be included.</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;Poco/Net/FTPClientSession.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;Poco/Net/NetException.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;Poco/StreamCopier.h&quot;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The StreamCopier need the std streams, so we include them too.</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;fstream&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-an-object" tabindex="-1"><a class="header-anchor" href="#create-an-object" aria-hidden="true">#</a> Create an Object</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">auto</span><span class="token operator">*</span> ftp <span class="token operator">=</span> <span class="token keyword">new</span> Poco<span class="token double-colon punctuation">::</span><span class="token class-name">Net</span><span class="token double-colon punctuation">::</span><span class="token function">FTPClientSession</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.1.3&quot;</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="do-upload" tabindex="-1"><a class="header-anchor" href="#do-upload" aria-hidden="true">#</a> Do Upload.</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">try</span><span class="token punctuation">{</span>
    std<span class="token double-colon punctuation">::</span>ostream <span class="token operator">&amp;</span>ftpOStream <span class="token operator">=</span> ftp<span class="token operator">-&gt;</span><span class="token function">beginUpload</span><span class="token punctuation">(</span><span class="token string">&quot;target_file_name.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    std<span class="token double-colon punctuation">::</span>ifstream <span class="token function">localIFStream</span><span class="token punctuation">(</span><span class="token string">&quot;/path/to/local_file.png&quot;</span><span class="token punctuation">,</span> std<span class="token double-colon punctuation">::</span>ifstream<span class="token double-colon punctuation">::</span>in <span class="token operator">|</span> std<span class="token double-colon punctuation">::</span>ifstream<span class="token double-colon punctuation">::</span>binary<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">auto</span> numBytes <span class="token operator">=</span> Poco<span class="token double-colon punctuation">::</span><span class="token class-name">StreamCopier</span><span class="token double-colon punctuation">::</span><span class="token function">copyStream</span><span class="token punctuation">(</span>localIFStream<span class="token punctuation">,</span> ftpOStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ftp<span class="token operator">-&gt;</span><span class="token function">endUpload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span><span class="token punctuation">(</span> Poco<span class="token double-colon punctuation">::</span>Net<span class="token double-colon punctuation">::</span>FTPException<span class="token operator">&amp;</span> e<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token double-colon punctuation">::</span>cerr<span class="token operator">&lt;&lt;</span>e<span class="token punctuation">.</span><span class="token function">what</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>e<span class="token punctuation">.</span><span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function v(f,g){const a=o("ExternalLinkIcon");return p(),c("div",null,[r,s("p",null,[n("POCO is a lightweight and flexible network library for C++ users."),u,n(" You can refer to the POCO library at its homepage: "),s("a",d,[n("https://pocoproject.org/"),e(a)]),n(" or its github project page: "),s("a",k,[n("https://github.com/pocoproject/poco"),e(a)]),n(" ."),h,n(" You can simply git clone from the POCO repository, and build it follows its official mannual."),m,n(" For me, I built it simply with the CMake-GUI tool on Windows, with all default settings.")]),b])}const w=t(i,[["render",v],["__file","2022-06-15-poco-ftp.html.vue"]]);export{w as default};
